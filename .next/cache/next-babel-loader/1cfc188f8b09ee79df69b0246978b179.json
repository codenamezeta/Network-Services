{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/_codenamezeta/Sites/Network Services/components/Layouts/NavbarEight.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\n\nvar NavbarEight = /*#__PURE__*/function (_Component) {\n  _inherits(NavbarEight, _Component);\n\n  var _super = _createSuper(NavbarEight);\n\n  function NavbarEight() {\n    var _this;\n\n    _classCallCheck(this, NavbarEight);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      collapsed: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleNavbar\", function () {\n      _this.setState({\n        collapsed: !_this.state.collapsed\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"menuActiveClass\", function () {\n      var mainNavLinks = document.querySelectorAll(\"nav ul li a\");\n      window.addEventListener(\"scroll\", function () {\n        var fromTop = window.scrollY;\n        mainNavLinks.forEach(function (link) {\n          if (link.hash) {\n            var section = document.querySelector(link.hash);\n\n            if (section.offsetTop <= fromTop && section.offsetTop + section.offsetHeight > fromTop) {\n              link.classList.add(\"active\");\n            } else {\n              link.classList.remove(\"active\");\n            }\n          }\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(NavbarEight, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      var elementId = document.getElementById(\"navbar\");\n      document.addEventListener(\"scroll\", function () {\n        if (window.scrollY > 170) {\n          elementId.classList.add(\"is-sticky\");\n        } else {\n          elementId.classList.remove(\"is-sticky\");\n        }\n      });\n      window.scrollTo(0, 0);\n      this.menuActiveClass();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var collapsed = this.state.collapsed;\n      var classOne = collapsed ? 'collapse navbar-collapse' : 'navbar-collapse collapse show';\n      var classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, __jsx(\"nav\", {\n        id: \"navbar\",\n        className: \"navbar navbar-expand-lg navbar-style-five navbar-light bg-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, __jsx(Link, {\n        href: \"/payment-processing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, __jsx(\"a\", {\n        className: \"navbar-brand\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }, __jsx(\"img\", {\n        src: \"/images/black-logo.png\",\n        alt: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }))), __jsx(\"button\", {\n        onClick: this.toggleNavbar,\n        className: classTwo,\n        type: \"button\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navbarSupportedContent\",\n        \"aria-controls\": \"navbarSupportedContent\",\n        \"aria-expanded\": \"false\",\n        \"aria-label\": \"Toggle navigation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, __jsx(\"span\", {\n        className: \"navbar-toggler-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }\n      })), __jsx(\"div\", {\n        className: classOne,\n        id: \"navbarSupportedContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, __jsx(\"ul\", {\n        className: \"navbar-nav ms-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, __jsx(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }, __jsx(AnchorLink, {\n        onClick: this.toggleNavbar,\n        offset: function offset() {\n          return 100;\n        },\n        className: \"nav-link active\",\n        href: \"#home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }\n      }, \"Home\")), __jsx(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }\n      }, __jsx(AnchorLink, {\n        onClick: this.toggleNavbar,\n        offset: function offset() {\n          return 0;\n        },\n        className: \"nav-link\",\n        href: \"#features\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 37\n        }\n      }, \"Features\")), __jsx(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }\n      }, __jsx(AnchorLink, {\n        onClick: this.toggleNavbar,\n        offset: function offset() {\n          return 0;\n        },\n        className: \"nav-link\",\n        href: \"#how-it-works\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }\n      }, \"How It Works\")), __jsx(\"li\", {\n        className: \"nav-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }\n      }, __jsx(AnchorLink, {\n        onClick: this.toggleNavbar,\n        offset: function offset() {\n          return -10;\n        },\n        className: \"nav-link\",\n        href: \"#contact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 37\n        }\n      }, \"Support\"))), __jsx(\"ul\", {\n        className: \"others-option\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 33\n        }\n      }, __jsx(\"a\", {\n        href: \"/signin\",\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 37\n        }\n      }, \"sign in\")))))));\n    }\n  }]);\n\n  return NavbarEight;\n}(Component);\n\nexport default NavbarEight;","map":{"version":3,"sources":["/Users/_codenamezeta/Sites/Network Services/components/Layouts/NavbarEight.js"],"names":["React","Component","Link","AnchorLink","NavbarEight","collapsed","setState","state","mainNavLinks","document","querySelectorAll","window","addEventListener","fromTop","scrollY","forEach","link","hash","section","querySelector","offsetTop","offsetHeight","classList","add","remove","_isMounted","elementId","getElementById","scrollTo","menuActiveClass","classOne","classTwo","toggleNavbar"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\n\nclass NavbarEight extends Component {\n\n    state = {\n        collapsed: true,\n    };\n\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        let elementId = document.getElementById(\"navbar\");\n        document.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 170) {\n                elementId.classList.add(\"is-sticky\");\n            } else {\n                elementId.classList.remove(\"is-sticky\");\n            }\n        });\n        window.scrollTo(0, 0);\n\n        this.menuActiveClass()\n    }\n\n    menuActiveClass = () => {\n        let mainNavLinks = document.querySelectorAll(\"nav ul li a\");\n        window.addEventListener(\"scroll\", () => {\n            let fromTop = window.scrollY;\n            mainNavLinks.forEach(link => {\n                if (link.hash){\n                    let section = document.querySelector(link.hash);\n            \n                    if (\n                        section.offsetTop <= fromTop &&\n                        section.offsetTop + section.offsetHeight > fromTop\n                    ) {\n                        link.classList.add(\"active\");\n                    } else {\n                        link.classList.remove(\"active\");\n                    }\n                }\n            });\n        });\n    }\n\n    render() {\n        const { collapsed } = this.state;\n        const classOne = collapsed ? 'collapse navbar-collapse' : 'navbar-collapse collapse show';\n        const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n        return (\n            <React.Fragment>\n                <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-style-five navbar-light bg-light\">\n                    <div className=\"container\">\n                        <Link href=\"/payment-processing\">\n                            <a className=\"navbar-brand\">\n                                <img src='/images/black-logo.png' alt=\"logo\" />\n                            </a>\n                        </Link>\n\n                        <button \n                            onClick={this.toggleNavbar}\n                            className={classTwo} \n                            type=\"button\" \n                            data-toggle=\"collapse\" \n                            data-target=\"#navbarSupportedContent\" \n                            aria-controls=\"navbarSupportedContent\" \n                            aria-expanded=\"false\" \n                            aria-label=\"Toggle navigation\"\n                        >\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n\n                        <div className={classOne} id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav ms-auto\">\n                                <li className=\"nav-item\">\n                                    <AnchorLink \n                                        onClick={this.toggleNavbar} \n                                        offset={() => 100} \n                                        className=\"nav-link active\" \n                                        href=\"#home\"\n                                    >\n                                        Home\n                                    </AnchorLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <AnchorLink \n                                        onClick={this.toggleNavbar} \n                                        offset={() => 0} \n                                        className=\"nav-link\" \n                                        href=\"#features\"\n                                    >\n                                        Features\n                                    </AnchorLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <AnchorLink \n                                        onClick={this.toggleNavbar} \n                                        offset={() => 0} \n                                        className=\"nav-link\" \n                                        href=\"#how-it-works\"\n                                    >\n                                        How It Works\n                                    </AnchorLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <AnchorLink \n                                        onClick={this.toggleNavbar} \n                                        offset={() => -10} \n                                        className=\"nav-link\" \n                                        href=\"#contact\"\n                                    >\n                                        Support\n                                    </AnchorLink>\n                                </li>\n                            </ul>\n\n                            <ul className=\"others-option\">\n                                <li>\n                                    <a href=\"/signin\" className=\"btn btn-primary\">sign in</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NavbarEight;"]},"metadata":{},"sourceType":"module"}