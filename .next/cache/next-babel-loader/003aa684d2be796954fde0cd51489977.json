{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/_codenamezeta/Sites/Network Services/components/PaymentProcessing/Funfact.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nvar Funfact = /*#__PURE__*/function (_Component) {\n  _inherits(Funfact, _Component);\n\n  var _super = _createSuper(Funfact);\n\n  function Funfact() {\n    var _this;\n\n    _classCallCheck(this, Funfact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      didViewCountUp: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onVisibilityChange\", function (isVisible) {\n      if (isVisible) {\n        _this.setState({\n          didViewCountUp: true\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Funfact, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"section\", {\n        className: \"payment-processing-funfacts ptb-100 jaralax\",\n        \"data-jarallax\": \"{\\\"speed\\\": 0.2}\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"funfacts-inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"single-funfacts-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }\n      }, \"Trusted by\"), __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      }, __jsx(\"span\", {\n        className: \"odometer\",\n        \"data-count\": \"99000\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 33\n        }\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 33\n        }\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 555 : 0,\n        duration: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 37\n        }\n      }))), \"K\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }\n      }, \"Businesses\")), __jsx(\"div\", {\n        className: \"single-funfacts-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }\n      }, \"Processing\"), __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }\n      }, \"$\", __jsx(\"span\", {\n        className: \"odometer\",\n        \"data-count\": \"50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 555 : 0,\n        duration: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }\n      }))), \"B\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, \"Businesses\")), __jsx(\"div\", {\n        className: \"single-funfacts-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, \"Trusted by\"), __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      }, __jsx(\"span\", {\n        className: \"odometer\",\n        \"data-count\": \"654\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, __jsx(VisibilitySensor, {\n        onChange: this.onVisibilityChange,\n        offset: {\n          top: 10\n        },\n        delayedCall: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, __jsx(CountUp, {\n        start: 0,\n        end: this.state.didViewCountUp ? 555 : 0,\n        duration: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 37\n        }\n      }))), \"K\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }, \"Software Platform Integrations\")))));\n    }\n  }]);\n\n  return Funfact;\n}(Component);\n\nexport default Funfact;","map":{"version":3,"sources":["/Users/_codenamezeta/Sites/Network Services/components/PaymentProcessing/Funfact.js"],"names":["React","Component","CountUp","VisibilitySensor","Funfact","didViewCountUp","isVisible","setState","onVisibilityChange","top","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nclass Funfact extends Component {\n    state = {\n        didViewCountUp: false\n    };\n\n    onVisibilityChange = isVisible => {\n        if (isVisible) {\n            this.setState({ didViewCountUp: true });\n        }\n    };\n    render() {\n        return (\n            <section className=\"payment-processing-funfacts ptb-100 jaralax\" data-jarallax='{\"speed\": 0.2}'>\n                <div className=\"container\">\n                    <div className=\"funfacts-inner\">\n                        <div className=\"single-funfacts-box\">\n                            <p>Trusted by</p>\n                            <h3><span className=\"odometer\" data-count=\"99000\">\n                                <VisibilitySensor\n                                    onChange={this.onVisibilityChange}\n                                    offset={{\n                                        top: 10\n                                    }}\n                                    delayedCall\n                                >\n                                    <CountUp\n                                        start={0}\n                                        end={\n                                            this.state.didViewCountUp\n                                                ? 555\n                                                : 0\n                                        }\n                                        duration={3}\n                                    />\n                                </VisibilitySensor>\n                            </span>K</h3>\n                            <p>Businesses</p>\n                        </div>\n\n                        <div className=\"single-funfacts-box\">\n                            <p>Processing</p>\n                            <h3>$<span className=\"odometer\" data-count=\"50\">\n                                <VisibilitySensor\n                                    onChange={this.onVisibilityChange}\n                                    offset={{\n                                        top: 10\n                                    }}\n                                    delayedCall\n                                >\n                                    <CountUp\n                                        start={0}\n                                        end={\n                                            this.state.didViewCountUp\n                                                ? 555\n                                                : 0\n                                        }\n                                        duration={3}\n                                    />\n                                </VisibilitySensor>\n                            </span>B</h3>\n                            <p>Businesses</p>\n                        </div>\n\n                        <div className=\"single-funfacts-box\">\n                            <p>Trusted by</p>\n                            <h3><span className=\"odometer\" data-count=\"654\">\n                                <VisibilitySensor\n                                    onChange={this.onVisibilityChange}\n                                    offset={{\n                                        top: 10\n                                    }}\n                                    delayedCall\n                                >\n                                    <CountUp\n                                        start={0}\n                                        end={\n                                            this.state.didViewCountUp\n                                                ? 555\n                                                : 0\n                                        }\n                                        duration={3}\n                                    />\n                                </VisibilitySensor>  \n                            </span>K</h3>\n                            <p>Software Platform Integrations</p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Funfact;\n"]},"metadata":{},"sourceType":"module"}